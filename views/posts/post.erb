 <%
  post_id = pr[:post_id]
  post    = $posts.get(post_id)
  splat   = pr['splat']
  handle  = splat[0]
  owner   = $users.get(handle: handle)
  is_owner= owner && owner[:_id] == cuid
  ps = post[:ps].to_a
  ps.push({type: 'text', text: ''})
%>

<style>
textarea { 
  border:1px solid green;
}
.single_p {
  /*border:1px solid blue;*/
  min-height: 20px;
  /*background-color: red;*/
  display: block;
}
.single_p.img {
  text-align: center;
  margin-bottom: 20px;
}
.single_p img {
  max-height:400px;
}
textarea {
/*  border:2px solid blue !important;*/
}

</style>

<% if pr[:json] %>
<pre>
  <%= post.to_json %>
</pre>
<% end %>

<div id='editor' class="<%='is_owner' if is_owner %>">  
  <h1 class='title refreshOnChange' autofocus>
    <% if is_owner %>
      <textarea onkeyup=markDirty(true) rows=1 class='editable_textarea title_textarea' autofocus placeholder='כותרת'><%= post['title'] %></textarea>
    <% else %>
      <div rows=1 class='editable_textarea title_textarea'><%= post['title'] %></div>
    <% end %>
  </h1>

  <%= erb :'posts/post_metadata', locals: {is_owner: is_owner, owner: owner, post: post} %>  

  <div class='postBody refreshOnChange'>
    <% ps.to_a.each_with_index do |para, idx| %>
      <% next unless para[:text].present? || para[:src].present? || (idx == 0 && ps.to_a.size == 1) %>
      <div class='single_p <%=para[:type]%>'>
        <% if (para[:type].to_s == 'text') && (idx == 0 || idx == (ps.to_a.size-1) || para[:text].to_s.strip.present?) %>   
          <% if is_owner %>
            <textarea onkeyup=markDirty(true) class='editable_textarea body_textarea' <%="placeholder='הסיפור שלך'" if ps.size == 1 && idx == 0 %>><%= para[:text] %></textarea>
          <% else %>
            <div class='reading_textarea body_textarea'><%= para[:text] %></div>
          <% end %>      
        
        <% elsif para[:type].to_s == 'img' %>
          <img src='<%=para[:src]%>' />
        <% end %>
      </div>
    
    <% end %>
  </div>

  <input type=file id=img_uploader style='display: none' />
  <%= erb :'posts/below_post_btns', locals: {post: post} if is_owner %>
</div>

<script>

var $title = $('#editor .title textarea');
var $body  = $('#editor .postBody textarea');

function updateServer(data) {
  return $.ajax('/posts/<%=post_id%>', {data: JSON.stringify(data), contentType: 'application/json', type: 'POST'});
}

function getData() {
  var ps = [];
  $('.single_p').each((idx,p) => {
    p = $(p);
    if (p.hasClass('text')) {
      ps.push({type: 'text', text: p.find('textarea').val()})
    } else if (p.hasClass('img')) {
      ps.push({type: 'img', src: p.find('img').attr('src')})
    }
  });
  var data = {title: $title.val(), ps: ps};
  return data;
}

function savePost() {  
  var data = getData();
  var btn  = $('.save_post_btn_text');
  //btn.fadeOut(0).text('');
  btn.text('שומר...');
  clearTimeout(window.savePostTimeout);
  window.savePostTimeout = setTimeout(()=>{    
    updateServer(data).then(res => { 
      btn.text('נשמר!')//.fadeOut(1500);
      setTimeout(()=> {
        btn.text('לשמור');
        markDirty(false);
      },500);
      
    })  
  },500);
}
  
function resizeTextAreas() {
  $('textarea').each(function () {
    this.setAttribute('style', 'height:' + (this.scrollHeight) + 'px;overflow-y:hidden;');
  }).on('input', function () {
    clearTimeout(window.resizeTextAreasTimeout);
    var scrollY = window.scrollY;
    var el = this; 
    window.resizeTextAreasTimeout = setTimeout(()=>{
      el.style.height = 'auto'; el.style.height = (el.scrollHeight) + 'px';  
      window.scrollTo(0,scrollY);
    },100)
  });
}

function addTextP() {
  var el = $('.single_p.text').first().clone();
  el.find('textarea').val('').attr('placeholder','');
  $('.postBody').append(el);
}

function addImgP(res) {
  var link = JSON.parse(res).data.link;
  //link = 'https://image.shutterstock.com/image-illustration/cow-isolated-on-white-background-260nw-1497503726.jpg';
  //var el = $('.single_p.img').first().clone();
  var el = $('<div class="single_p img"><img /></div>');
  el.find('img').attr('src',link);
  $('.postBody').append(el);
  
  addTextP();
}

function removeImg(el) {
  if (confirm("למחוק את התמונה?")) {
    $(event.target).closest('.single_p').remove();
    savePost();
  }
}

function attachImgDeleters() {
  $('body').on('click', '.single_p img', removeImg); 
}

function attachImgUploader() {
  $('#img_uploader').on("change", function() {
    var file = $(this).get(0).files[0];
    if (file) { uploadImg(file, addImgP) }
  });
}

function createTextLinks(text) {
  var oldText = $('.reading_textarea').html();
  var text    = (oldText || "").replace(
    /([^\S]|^)(((https?\:\/\/)|(www\.))(\S+))/gi,
    function(match, space, url){
      var hyperlink = url;
      var fullURL   = url.substring(0,30);
      var toolti
      if (url.length > 30) {
        url = url.substring(0,17)+'...'
      }
      if (!hyperlink.match('^https?:\/\/')) {
        //hyperlink = 'https://' + hyperlink;
      }
      //data-placement=top data-toggle=tooltip data-title=${fullURL} // tooltip not necessary since link is original
      return space + `<a  class=text_link target=_blank href="` + hyperlink + '">' + url + '</a>';
    }
  );
  $('.reading_textarea').html(text);
};

function onLoad() {
  $('[data-toggle="tooltip"]').tooltip(); // show tooltips 

  setTimeout(()=>resizeTextAreas(),100);
  attachImgUploader();
  attachImgDeleters();
  //createTextLinks(); //buggy!
}


function onbeforeunload(e) {
  e.preventDefault(); // for firefox
  e.returnValue = ''; // for chrome
}

function markDirty(flag) {
  if (flag) {
    $('#save_post_btn').addClass('btn-primary');  
    //https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event
    window.addEventListener('beforeunload', onbeforeunload);
  } else {
    window.removeEventListener('beforeunload', onbeforeunload);
    $('#save_post_btn').removeClass('btn-primary');  
  }  
}

$(document).ready(onLoad);
</script>